//求数组中元素出现次数超过数组长度一半的数字。
int Partion(int arr[], int left, int right)
{
	int tmp = arr[left];
	while (right > left)
	{
		while (right>left && arr[right] >= tmp)
		{
			right--;
		}
		if (left >= right)
		{
			break;
		}
		else
		{
			arr[left] = arr[right];
		}
		while (right>left && arr[left] <= tmp)
		{
			left++;
		}
		if (left >= right)
		{
			break;
		}
		else
		{
			arr[right] = arr[left];
		}
	}
	arr[left] = tmp;
	return left;
}
int CheckIsMoreThanHalf(int result , int arr[], int len)
{
	int count = 0;
	for (int i = 0; i < len; i++)
	{
		if (arr[i] == result)
		{
			count++;
		}
	}
	if (count>len / 2)
	{
		return 1;
	}
	return 0;
}
int ArrayLenHalfNum(int arr[], int len)
{
	int start = 0;
	int end = len - 1;
	int par = Partion(arr, start, end);
	int result = 0;
	while (par != (len-1)/2)
	{
		if (par > (len-1)/2)
		{
			end = par - 1;
			par = Partion(arr, start, end);
		}
		else
		{
			start = par + 1;
			par = Partion(arr, start, end);
		}
	}
	result=arr[par];
	if (!CheckIsMoreThanHalf(result , arr, len))
	{
		return -1;
	}
	return result;
}
int main()
{
	int arr[] = {1,2,2,1,1};
	int len = sizeof(arr) / sizeof(arr[0]);
	int ret = ArrayLenHalfNum(arr, len);
	printf("%d\n", ret);
	system("pause");
	return 0;
}
