//一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。
void SeekOneNumber(int arr[], int len,int *x,int *y)
{
	int tmp = 0;
	int i = 0;
	int count = 0;
	int p = 0;
	int q = 0;
	//tmp是出现一次两个数字的结合体
	for (i = 0; i < len; i++)
	{
		tmp ^= arr[i];
	}
	for (i = 0; i < 32; i++)
	{
		if (((tmp >> i) & 1) == 1)
		{
			count = i;
		}
	}
	for (i = 0; i < len; i++)
	{
		if (((arr[i] >> count) & 1) == 1)
		{
			p ^= arr[i];
		}
		else
		{
			q ^= arr[i];
		}
	}
	*x = p;
	*y = q;
}
int main()
{
	int arr[] = { 1, 3, 5, 7, 1, 3, 5, 9 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int x = -1;
	int y = -1;
	SeekOneNumber(arr, len,&x,&y);
	printf("%d %d\n", x, y);
	system("pause");
	return 0;
}
